[
["Format is: [scriptSig, scriptPubKey, flags, ... comments]"],
["It is evaluated as if there was a crediting coinbase transaction with two 0"],
["pushes as scriptSig, and one output of 0 satoshi and given scriptPubKey,"],
["followed by a spending transaction which spends this output as only input (and"],
["correct prevout hash), using the given scriptSig. All nLockTimes are 2e9, all"],
["nSequences are max."],

["36028797018963967 0 ADD", "NOP", "STRICTENC", "arithmetic operands must be in range [-2^55...2^55] (exclusive)"],
["-36028797018963967 0 ADD", "NOP", "STRICTENC", "arithmetic operands must be in range [-2^55...2^55] (exclusive)"],

["", "ASSET DATA_32 0x0102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20 EQUAL", "STRICTENC", "Test ASSET opcode"],
["", "MINTIME 11 EQUAL", "STRICTENC", "Test MINTIME opcode"],
["", "MAXTIME 12 EQUAL", "STRICTENC", "Test MAXTIME opcode"],

["", "DEPTH 0 EQUAL", "STRICTENC", "Test the test: we should have an empty stack after scriptSig evaluation"],
["  ", "DEPTH 0 EQUAL", "STRICTENC", "and multiple spaces should not change that."],
["   ", "DEPTH 0 EQUAL", "STRICTENC"],
["    ", "DEPTH 0 EQUAL", "STRICTENC"],
["1 2", "2 EQUALVERIFY 1 EQUAL", "STRICTENC", "Similarly whitespace around and between symbols"],
["1  2", "2 EQUALVERIFY 1 EQUAL", "STRICTENC"],
["  1  2", "2 EQUALVERIFY 1 EQUAL", "STRICTENC"],
["1  2  ", "2 EQUALVERIFY 1 EQUAL", "STRICTENC"],
["  1  2  ", "2 EQUALVERIFY 1 EQUAL", "STRICTENC"],

["1", "", "STRICTENC"],
["0x02 0x01 0x00", "", "STRICTENC", "all bytes are significant, not only the last one"],
["0x09 0x00000000 0x00000000 0x10", "", "STRICTENC", "equals zero when cast to Int64"],

["0x01 0x0b", "11 EQUAL", "STRICTENC", "push 1 byte"],
["0x02 0x417a", "'Az' EQUAL", "STRICTENC"],
["0x4b 0x417a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a7a",
 "'Azzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz' EQUAL", "STRICTENC", "push 75 bytes"],

["0x4c 0x01 0x07","7 EQUAL", "STRICTENC", "0x4c is OP_PUSHDATA1"],
["0x4d 0x0100 0x08","8 EQUAL", "STRICTENC", "0x4d is OP_PUSHDATA2"],
["0x4e 0x01000000 0x09","9 EQUAL", "STRICTENC", "0x4e is OP_PUSHDATA4"],

["0x4c 0x00","0 EQUAL", "STRICTENC"],
["0x4d 0x0000","0 EQUAL", "STRICTENC"],
["0x4e 0x00000000","0 EQUAL", "STRICTENC"],
["0x4f 1000 ADD","999 EQUAL", "STRICTENC"],
["0", "IF 0x50 ENDIF 1", "STRICTENC", "0x50 is reserved (ok if not executed)"],
["0x51", "0x5f ADD 0x60 EQUAL", "STRICTENC", "0x51 through 0x60 push 1 through 16 onto stack"],
["1","NOP", "STRICTENC"],
["0", "IF VER ELSE 1 ENDIF", "STRICTENC", "VER non-functional (ok if not executed)"],
["0", "IF RESERVED RESERVED1 RESERVED2 ELSE 1 ENDIF", "STRICTENC", "RESERVED ok in un-executed IF"],

["1", "DUP IF ENDIF", "STRICTENC"],
["1", "IF 1 ENDIF", "STRICTENC"],
["1", "DUP IF ELSE ENDIF", "STRICTENC"],
["1", "IF 1 ELSE ENDIF", "STRICTENC"],
["0", "IF ELSE 1 ENDIF", "STRICTENC"],

["1 1", "IF IF 1 ELSE 0 ENDIF ENDIF", "STRICTENC"],
["1 0", "IF IF 1 ELSE 0 ENDIF ENDIF", "STRICTENC"],
["1 1", "IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF", "STRICTENC"],
["0 0", "IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF", "STRICTENC"],

["1 0", "NOTIF IF 1 ELSE 0 ENDIF ENDIF", "STRICTENC"],
["1 1", "NOTIF IF 1 ELSE 0 ENDIF ENDIF", "STRICTENC"],
["1 0", "NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF", "STRICTENC"],
["0 1", "NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF", "STRICTENC"],

["0", "IF 0 ELSE 1 ELSE 0 ENDIF", "STRICTENC", "Multiple ELSE's are valid and executed inverts on each ELSE encountered"],
["1", "IF 1 ELSE 0 ELSE ENDIF", "STRICTENC"],
["1", "IF ELSE 0 ELSE 1 ENDIF", "STRICTENC"],
["1", "IF 1 ELSE 0 ELSE 1 ENDIF ADD 2 EQUAL", "STRICTENC"],
["'' 1", "IF SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ENDIF 0x14 0x68ca4fec736264c13b859bac43d5173df6871682 EQUAL", "STRICTENC"],

["1", "NOTIF 0 ELSE 1 ELSE 0 ENDIF", "STRICTENC", "Multiple ELSE's are valid and execution inverts on each ELSE encountered"],
["0", "NOTIF 1 ELSE 0 ELSE ENDIF", "STRICTENC"],
["0", "NOTIF ELSE 0 ELSE 1 ENDIF", "STRICTENC"],
["0", "NOTIF 1 ELSE 0 ELSE 1 ENDIF ADD 2 EQUAL", "STRICTENC"],
["'' 0", "NOTIF SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ENDIF 0x14 0x68ca4fec736264c13b859bac43d5173df6871682 EQUAL", "STRICTENC"],

["0", "IF 1 IF RETURN ELSE RETURN ELSE RETURN ENDIF ELSE 1 IF 1 ELSE RETURN ELSE 1 ENDIF ELSE RETURN ENDIF ADD 2 EQUAL", "STRICTENC", "Nested ELSE ELSE"],
["1", "NOTIF 0 NOTIF RETURN ELSE RETURN ELSE RETURN ENDIF ELSE 0 NOTIF 1 ELSE RETURN ELSE 1 ENDIF ELSE RETURN ENDIF ADD 2 EQUAL", "STRICTENC"],

["0", "IF RETURN ENDIF 1", "STRICTENC", "RETURN only works if executed"],

["1 1", "VERIFY", "STRICTENC"],
["1 0x05 0x01 0x00 0x00 0x00 0x00", "VERIFY", "STRICTENC", "values >4 bytes can be cast to boolean"],
["1 0x01 0x80", "IF 0 ENDIF", "STRICTENC", "negative 0 is false"],

["10 0 11 TOALTSTACK DROP FROMALTSTACK", "ADD 21 EQUAL", "STRICTENC"],
["'gavin_was_here' TOALTSTACK 11 FROMALTSTACK", "'gavin_was_here' EQUALVERIFY 11 EQUAL", "STRICTENC"],

["0 IFDUP", "DEPTH 1 EQUALVERIFY 0 EQUAL", "STRICTENC"],
["1 IFDUP", "DEPTH 2 EQUALVERIFY 1 EQUALVERIFY 1 EQUAL", "STRICTENC"],
["0x05 0x0100000000 IFDUP", "DEPTH 2 EQUALVERIFY 0x05 0x0100000000 EQUAL", "STRICTENC", "IFDUP dups non ints"],
["0 DROP", "DEPTH 0 EQUAL", "STRICTENC"],
["0", "DUP 1 ADD 1 EQUALVERIFY 0 EQUAL", "STRICTENC"],
["0 1", "NIP", "STRICTENC"],
["1 0", "OVER DEPTH 3 EQUALVERIFY", "STRICTENC"],
["22 21 20", "0 PICK 20 EQUALVERIFY DEPTH 3 EQUAL", "STRICTENC"],
["22 21 20", "1 PICK 21 EQUALVERIFY DEPTH 3 EQUAL", "STRICTENC"],
["22 21 20", "2 PICK 22 EQUALVERIFY DEPTH 3 EQUAL", "STRICTENC"],
["22 21 20", "0 ROLL 20 EQUALVERIFY DEPTH 2 EQUAL", "STRICTENC"],
["22 21 20", "1 ROLL 21 EQUALVERIFY DEPTH 2 EQUAL", "STRICTENC"],
["22 21 20", "2 ROLL 22 EQUALVERIFY DEPTH 2 EQUAL", "STRICTENC"],
["22 21 20", "ROT 22 EQUAL", "STRICTENC"],
["22 21 20", "ROT DROP 20 EQUAL", "STRICTENC"],
["22 21 20", "ROT DROP DROP 21 EQUAL", "STRICTENC"],
["22 21 20", "ROT ROT 21 EQUAL", "STRICTENC"],
["22 21 20", "ROT ROT ROT 20 EQUAL", "STRICTENC"],
["25 24 23 22 21 20", "2ROT 24 EQUAL", "STRICTENC"],
["25 24 23 22 21 20", "2ROT DROP 25 EQUAL", "STRICTENC"],
["25 24 23 22 21 20", "2ROT 2DROP 20 EQUAL", "STRICTENC"],
["25 24 23 22 21 20", "2ROT 2DROP DROP 21 EQUAL", "STRICTENC"],
["25 24 23 22 21 20", "2ROT 2DROP 2DROP 22 EQUAL", "STRICTENC"],
["25 24 23 22 21 20", "2ROT 2DROP 2DROP DROP 23 EQUAL", "STRICTENC"],
["25 24 23 22 21 20", "2ROT 2ROT 22 EQUAL", "STRICTENC"],
["25 24 23 22 21 20", "2ROT 2ROT 2ROT 20 EQUAL", "STRICTENC"],
["1 0", "SWAP 1 EQUALVERIFY 0 EQUAL", "STRICTENC"],
["0 1", "TUCK DEPTH 3 EQUALVERIFY SWAP 2DROP", "STRICTENC"],
["13 14", "2DUP ROT EQUALVERIFY EQUAL", "STRICTENC"],
["-1 0 1 2", "3DUP DEPTH 7 EQUALVERIFY ADD ADD 3 EQUALVERIFY 2DROP 0 EQUALVERIFY", "STRICTENC"],
["1 2 3 5", "2OVER ADD ADD 8 EQUALVERIFY ADD ADD 6 EQUAL", "STRICTENC"],
["1 3 5 7", "2SWAP ADD 4 EQUALVERIFY ADD 12 EQUAL", "STRICTENC"],
["0", "SIZE 0 EQUAL", "STRICTENC"],
["1", "SIZE 1 EQUAL", "STRICTENC"],
["127", "SIZE 1 EQUAL", "STRICTENC"],
["128", "SIZE 2 EQUAL", "STRICTENC"],
["32767", "SIZE 2 EQUAL", "STRICTENC"],
["32768", "SIZE 3 EQUAL", "STRICTENC"],
["8388607", "SIZE 3 EQUAL", "STRICTENC"],
["8388608", "SIZE 4 EQUAL", "STRICTENC"],
["2147483647", "SIZE 4 EQUAL", "STRICTENC"],
["2147483648", "SIZE 5 EQUAL", "STRICTENC"],
["549755813887", "SIZE 5 EQUAL", "STRICTENC"],
["549755813888", "SIZE 6 EQUAL", "STRICTENC"],
["9223372036854775807", "SIZE 8 EQUAL", "STRICTENC"],
["-1", "SIZE 1 EQUAL", "STRICTENC"],
["-127", "SIZE 1 EQUAL", "STRICTENC"],
["-128", "SIZE 2 EQUAL", "STRICTENC"],
["-32767", "SIZE 2 EQUAL", "STRICTENC"],
["-32768", "SIZE 3 EQUAL", "STRICTENC"],
["-8388607", "SIZE 3 EQUAL", "STRICTENC"],
["-8388608", "SIZE 4 EQUAL", "STRICTENC"],
["-2147483647", "SIZE 4 EQUAL", "STRICTENC"],
["-2147483648", "SIZE 5 EQUAL", "STRICTENC"],
["-549755813887", "SIZE 5 EQUAL", "STRICTENC"],
["-549755813888", "SIZE 6 EQUAL", "STRICTENC"],
["-9223372036854775807", "SIZE 8 EQUAL", "STRICTENC"],
["'abcdefghijklmnopqrstuvwxyz'", "SIZE 26 EQUAL", "STRICTENC"],

["42", "SIZE 1 EQUALVERIFY 42 EQUAL", "STRICTENC", "SIZE does not consume argument"],

["2 -2 ADD", "0 EQUAL", "STRICTENC"],
["2147483647 -2147483647 ADD", "0 EQUAL", "STRICTENC"],
["-1 -1 ADD", "-2 EQUAL", "STRICTENC"],

["0 0","EQUAL", "STRICTENC"],
["1 1 ADD", "2 EQUAL", "STRICTENC"],
["1 1ADD", "2 EQUAL", "STRICTENC"],
["111 1SUB", "110 EQUAL", "STRICTENC"],
["111 1 ADD 12 SUB", "100 EQUAL", "STRICTENC"],
["0 ABS", "0 EQUAL", "STRICTENC"],
["16 ABS", "16 EQUAL", "STRICTENC"],
["-16 ABS", "-16 NEGATE EQUAL", "STRICTENC"],
["0 NOT", "NOP", "STRICTENC"],
["1 NOT", "0 EQUAL", "STRICTENC"],
["11 NOT", "0 EQUAL", "STRICTENC"],
["0 0NOTEQUAL", "0 EQUAL", "STRICTENC"],
["1 0NOTEQUAL", "1 EQUAL", "STRICTENC"],
["111 0NOTEQUAL", "1 EQUAL", "STRICTENC"],
["-111 0NOTEQUAL", "1 EQUAL", "STRICTENC"],
["1 1 BOOLAND", "NOP", "STRICTENC"],
["1 0 BOOLAND", "NOT", "STRICTENC"],
["0 1 BOOLAND", "NOT", "STRICTENC"],
["0 0 BOOLAND", "NOT", "STRICTENC"],
["16 17 BOOLAND", "NOP", "STRICTENC"],
["1 1 BOOLOR", "NOP", "STRICTENC"],
["1 0 BOOLOR", "NOP", "STRICTENC"],
["0 1 BOOLOR", "NOP", "STRICTENC"],
["0 0 BOOLOR", "NOT", "STRICTENC"],
["16 17 BOOLOR", "NOP", "STRICTENC"],
["11 10 1 ADD", "NUMEQUAL", "STRICTENC"],
["11 10 1 ADD", "NUMEQUALVERIFY 1", "STRICTENC"],
["11 10 1 ADD", "NUMNOTEQUAL NOT", "STRICTENC"],
["111 10 1 ADD", "NUMNOTEQUAL", "STRICTENC"],
["11 10", "LESSTHAN NOT", "STRICTENC"],
["4 4", "LESSTHAN NOT", "STRICTENC"],
["10 11", "LESSTHAN", "STRICTENC"],
["-11 11", "LESSTHAN", "STRICTENC"],
["-11 -10", "LESSTHAN", "STRICTENC"],
["11 10", "GREATERTHAN", "STRICTENC"],
["4 4", "GREATERTHAN NOT", "STRICTENC"],
["10 11", "GREATERTHAN NOT", "STRICTENC"],
["-11 11", "GREATERTHAN NOT", "STRICTENC"],
["-11 -10", "GREATERTHAN NOT", "STRICTENC"],
["11 10", "LESSTHANOREQUAL NOT", "STRICTENC"],
["4 4", "LESSTHANOREQUAL", "STRICTENC"],
["10 11", "LESSTHANOREQUAL", "STRICTENC"],
["-11 11", "LESSTHANOREQUAL", "STRICTENC"],
["-11 -10", "LESSTHANOREQUAL", "STRICTENC"],
["11 10", "GREATERTHANOREQUAL", "STRICTENC"],
["4 4", "GREATERTHANOREQUAL", "STRICTENC"],
["10 11", "GREATERTHANOREQUAL NOT", "STRICTENC"],
["-11 11", "GREATERTHANOREQUAL NOT", "STRICTENC"],
["-11 -10", "GREATERTHANOREQUAL NOT", "STRICTENC"],
["1 0 MIN", "0 NUMEQUAL", "STRICTENC"],
["0 1 MIN", "0 NUMEQUAL", "STRICTENC"],
["-1 0 MIN", "-1 NUMEQUAL", "STRICTENC"],
["0 -2147483647 MIN", "-2147483647 NUMEQUAL", "STRICTENC"],
["2147483647 0 MAX", "2147483647 NUMEQUAL", "STRICTENC"],
["0 100 MAX", "100 NUMEQUAL", "STRICTENC"],
["-100 0 MAX", "0 NUMEQUAL", "STRICTENC"],
["0 -2147483647 MAX", "0 NUMEQUAL", "STRICTENC"],
["0 0 1", "WITHIN", "STRICTENC"],
["1 0 1", "WITHIN NOT", "STRICTENC"],
["0 -2147483647 2147483647", "WITHIN", "STRICTENC"],
["-1 -100 100", "WITHIN", "STRICTENC"],
["11 -100 100", "WITHIN", "STRICTENC"],
["-2147483647 -100 100", "WITHIN NOT", "STRICTENC"],
["2147483647 -100 100", "WITHIN NOT", "STRICTENC"],

["2147483647 2147483647 SUB", "0 EQUAL", "STRICTENC"],
["2147483647 DUP ADD", "4294967294 EQUAL", "STRICTENC", ">32 bit EQUAL is valid"],
["2147483647 NEGATE DUP ADD", "-4294967294 EQUAL", "STRICTENC"],

["''", "RIPEMD160 0x14 0x9c1185a5c5e9fc54612808977ee8f548b2258d31 EQUAL", "STRICTENC"],
["'a'", "RIPEMD160 0x14 0x0bdc9d2d256b3ee9daae347be6f4dc835a467ffe EQUAL", "STRICTENC"],
["'abcdefghijklmnopqrstuvwxyz'", "RIPEMD160 0x14 0xf71c27109c692c1b56bbdceb5b9d2865b3708dbc EQUAL", "STRICTENC"],
["''", "SHA1 0x14 0xda39a3ee5e6b4b0d3255bfef95601890afd80709 EQUAL", "STRICTENC"],
["'a'", "SHA1 0x14 0x86f7e437faa5a7fce15d1ddcb9eaeaea377667b8 EQUAL", "STRICTENC"],
["'abcdefghijklmnopqrstuvwxyz'", "SHA1 0x14 0x32d10c7b8cf96570ca04ce37f2a19d84240d3a89 EQUAL", "STRICTENC"],
["''", "SHA256 0x20 0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 EQUAL", "STRICTENC"],
["'a'", "SHA256 0x20 0xca978112ca1bbdcafac231b39a23dc4da786eff8147c4e72b9807785afee48bb EQUAL", "STRICTENC"],
["'abcdefghijklmnopqrstuvwxyz'", "SHA256 0x20 0x71c480df93d6ae2f1efad1447c66c9525e316218cf51fc8d9ed832f2daf18b73 EQUAL", "STRICTENC"],

["''", "SHA3 0x20 0xa7ffc6f8bf1ed76651c14756a061d662f580ff4de43b49fa82d80a4b80f8434a EQUAL", "STRICTENC"],
["'a'", "SHA3 0x20 0x80084bf2fba02475726feb2cab2d8215eab14bc6bdd8bfb2c8151257032ecd8b EQUAL", "STRICTENC"],
["'abcdefghijklmnopqrstuvwxyz'", "SHA3 0x4c 0x20 0x7cab2dc765e21b241dbc1c255ce620b29f527c6d5e7f5f843e56288f0d707521 EQUAL", "STRICTENC"],


["1","NOP1 NOP3 NOP4 NOP5 NOP6 NOP7 NOP8 NOP9 NOP10 1 EQUAL", "STRICTENC"],
["'NOP_1_to_10' NOP1 NOP3 NOP4 NOP5 NOP6 NOP7 NOP8 NOP9 NOP10","'NOP_1_to_10' EQUAL", "STRICTENC"],

["1", "NOP", "STRICTENC,DISCOURAGE_UPGRADABLE_NOPS", "Discourage NOPx flag allows OP_NOP"],

["0", "IF NOP10 ENDIF 1", "STRICTENC,DISCOURAGE_UPGRADABLE_NOPS",
 "Discouraged NOPs are allowed if not executed"],

["0", "IF 0xba ELSE 1 ENDIF", "STRICTENC", "opcodes above NOP10 invalid if executed"],
["0", "IF 0xbb ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xbc ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xbd ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xbe ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xbf ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xc0 ELSE 1 ENDIF", "STRICTENC"],
["0", "1 DROP IF 0xc1 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xc2 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xc3 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xc4 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xc5 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xc6 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xc7 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xc8 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xc9 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xcb ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xcc ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xcd ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xce ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xcf ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xd2 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xd3 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xd4 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xd5 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xd6 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xd7 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xd8 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xd9 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xda ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xdb ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xdc ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xdd ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xde ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xdf ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xe0 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xe1 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xe2 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xe3 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xe4 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xe5 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xe6 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xe7 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xe8 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xe9 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xea ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xeb ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xec ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xed ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xee ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xef ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xf0 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xf1 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xf2 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xf3 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xf4 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xf5 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xf6 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xf7 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xf8 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xf9 ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xfa ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xfb ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xfc ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xfd ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xfe ELSE 1 ENDIF", "STRICTENC"],
["0", "IF 0xff ELSE 1 ENDIF", "STRICTENC"],

["NOP",
"'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb'",
"STRICTENC",
"520 byte push"],
["1",
"0x616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161",
"STRICTENC",
"201 opcodes executed. 0x61 is NOP"],

["0",
"IF 0x5050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050 ENDIF 1",
"STRICTENC",
">201 opcodes, but RESERVED (0x50) doesn't count towards opcode limit."],

["NOP","1", "STRICTENC"],

["1", "0x01 0x01 EQUAL", "STRICTENC", "The following is useful for checking implementations of BN_bn2mpi"],
["127", "0x01 0x7F EQUAL", "STRICTENC"],
["128", "0x02 0x8000 EQUAL", "STRICTENC", "Leave room for the sign bit"],
["32767", "0x02 0xFF7F EQUAL", "STRICTENC"],
["32768", "0x03 0x008000 EQUAL", "STRICTENC"],
["8388607", "0x03 0xFFFF7F EQUAL", "STRICTENC"],
["8388608", "0x04 0x00008000 EQUAL", "STRICTENC"],
["2147483647", "0x04 0xFFFFFF7F EQUAL", "STRICTENC"],
["2147483648", "0x05 0x0000008000 EQUAL", "STRICTENC"],
["549755813887", "0x05 0xFFFFFFFF7F EQUAL", "STRICTENC"],
["549755813888", "0x06 0xFFFFFFFF7F EQUAL", "STRICTENC"],
["9223372036854775807", "0x08 0xFFFFFFFFFFFFFF7F EQUAL", "STRICTENC"],
["-1", "0x01 0x81 EQUAL", "STRICTENC", "Numbers are little-endian with the MSB being a sign bit"],
["-127", "0x01 0xFF EQUAL", "STRICTENC"],
["-128", "0x02 0x8080 EQUAL", "STRICTENC"],
["-32767", "0x02 0xFFFF EQUAL", "STRICTENC"],
["-32768", "0x03 0x008080 EQUAL", "STRICTENC"],
["-8388607", "0x03 0xFFFFFF EQUAL", "STRICTENC"],
["-8388608", "0x04 0x00008080 EQUAL", "STRICTENC"],
["-2147483647", "0x04 0xFFFFFFFF EQUAL", "STRICTENC"],
["-2147483648", "0x05 0x0000008080 EQUAL", "STRICTENC"],
["-4294967295", "0x05 0xFFFFFFFF80 EQUAL", "STRICTENC"],
["-549755813887", "0x05 0xFFFFFFFFFF EQUAL", "STRICTENC"],
["-549755813888", "0x06 0x000000008080 EQUAL", "STRICTENC"],
["-9223372036854775807", "0x08 0xFFFFFFFFFFFFFFFF EQUAL", "STRICTENC"],

["2147483647", "1ADD 2147483648 EQUAL", "STRICTENC", "We can do math on 4-byte integers, and compare 5-byte ones"],
["2147483647", "1ADD 1", "STRICTENC"],
["-2147483647", "1ADD 1", "STRICTENC"],

["1", "0x02 0x0100 EQUAL NOT", "STRICTENC", "Not the same byte array..."],
["1", "0x02 0x0100 NUMEQUAL", "STRICTENC", "... but they are numerically equal"],
["11", "0x4c 0x03 0x0b0000 NUMEQUAL", "STRICTENC"],
["0", "0x01 0x80 EQUAL NOT", "STRICTENC"],
["0", "0x01 0x80 NUMEQUAL", "STRICTENC", "Zero numerically equals negative zero"],
["0", "0x02 0x0080 NUMEQUAL", "STRICTENC"],
["0x03 0x000080", "0x04 0x00000080 NUMEQUAL", "STRICTENC"],
["0x03 0x100080", "0x04 0x10000080 NUMEQUAL", "STRICTENC"],
["0x03 0x100000", "0x04 0x10000000 NUMEQUAL", "STRICTENC"],

["NOP", "NOP 1", "STRICTENC", "The following tests check the if(stack.size() < N) tests in each opcode"],
["1", "IF 1 ENDIF", "STRICTENC", "They are here to catch copy-and-paste errors"],
["0", "NOTIF 1 ENDIF", "STRICTENC", "Most of them are duplicated elsewhere,"],
["1", "VERIFY 1", "STRICTENC", "but, hey, more is always better, right?"],

["0", "TOALTSTACK 1", "STRICTENC"],
["1", "TOALTSTACK FROMALTSTACK", "STRICTENC"],
["0 0", "2DROP 1", "STRICTENC"],
["0 1", "2DUP", "STRICTENC"],
["0 0 1", "3DUP", "STRICTENC"],
["0 1 0 0", "2OVER", "STRICTENC"],
["0 1 0 0 0 0", "2ROT", "STRICTENC"],
["0 1 0 0", "2SWAP", "STRICTENC"],
["1", "IFDUP", "STRICTENC"],
["NOP", "DEPTH 1", "STRICTENC"],
["0", "DROP 1", "STRICTENC"],
["1", "DUP", "STRICTENC"],
["0 1", "NIP", "STRICTENC"],
["1 0", "OVER", "STRICTENC"],
["1 0 0 0 3", "PICK", "STRICTENC"],
["1 0", "PICK", "STRICTENC"],
["1 0 0 0 3", "ROLL", "STRICTENC"],
["1 0", "ROLL", "STRICTENC"],
["1 0 0", "ROT", "STRICTENC"],
["1 0", "SWAP", "STRICTENC"],
["0 1", "TUCK", "STRICTENC"],

["1", "SIZE", "STRICTENC"],

["0 0", "EQUAL", "STRICTENC"],
["0 0", "EQUALVERIFY 1", "STRICTENC"],
["0 0 1", "EQUAL EQUAL", "STRICTENC", "OP_0 and bools must have identical byte representations"],

["0", "1ADD", "STRICTENC"],
["2", "1SUB", "STRICTENC"],
["-1", "NEGATE", "STRICTENC"],
["-1", "ABS", "STRICTENC"],
["0", "NOT", "STRICTENC"],
["-1", "0NOTEQUAL", "STRICTENC"],

["1 0", "ADD", "STRICTENC"],
["1 0", "SUB", "STRICTENC"],
["-1 -1", "BOOLAND", "STRICTENC"],
["-1 0", "BOOLOR", "STRICTENC"],
["0 0", "NUMEQUAL", "STRICTENC"],
["0 0", "NUMEQUALVERIFY 1", "STRICTENC"],
["-1 0", "NUMNOTEQUAL", "STRICTENC"],
["-1 0", "LESSTHAN", "STRICTENC"],
["1 0", "GREATERTHAN", "STRICTENC"],
["0 0", "LESSTHANOREQUAL", "STRICTENC"],
["0 0", "GREATERTHANOREQUAL", "STRICTENC"],
["-1 0", "MIN", "STRICTENC"],
["1 0", "MAX", "STRICTENC"],
["-1 -1 0", "WITHIN", "STRICTENC"],

["0", "RIPEMD160", "STRICTENC"],
["0", "SHA1", "STRICTENC"],
["0", "SHA256", "STRICTENC"],
["0", "SHA3", "STRICTENC"],
["NOP", "CODESEPARATOR 1", "STRICTENC"],

["NOP", "NOP1 1", "STRICTENC"],

["NOP", "NOP3 1", "STRICTENC"],
["NOP", "NOP4 1", "STRICTENC"],
["NOP", "NOP5 1", "STRICTENC"],
["NOP", "NOP6 1", "STRICTENC"],
["NOP", "NOP7 1", "STRICTENC"],
["NOP", "NOP8 1", "STRICTENC"],
["NOP", "NOP9 1", "STRICTENC"],
["NOP", "NOP10 1", "STRICTENC"],

["", "0 0 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC", "CHECKMULTISIG is allowed to have zero keys and/or sigs"],
["", "0 0 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 0 1 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC", "Zero sigs means no sigs are checked"],
["", "0 0 1 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],

["", "0 0 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC", "CHECKMULTISIG is allowed to have zero keys and/or sigs"],
["", "0 0 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 0 1 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC", "Zero sigs means no sigs are checked"],
["", "0 0 1 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],

["", "0 'a' 'b' 2 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC", "Test from up to 20 pubkeys, all not checked"],
["", "0 'a' 'b' 'c' 3 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 4 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 5 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 6 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 7 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 8 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 9 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 10 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 11 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 12 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 13 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 14 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 15 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 16 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 17 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 18 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 19 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIG VERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 1 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 2 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 3 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 4 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 5 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 6 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 7 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 8 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 9 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 10 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 11 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 12 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 13 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 14 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 15 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 16 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 17 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 18 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 19 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],
["", "0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIGVERIFY DEPTH 0 EQUAL", "STRICTENC"],

["",
"NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP 0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIG 0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIG 0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIG 0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIG 0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIG 0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIG 0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIG 0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIG 0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIG",
"STRICTENC",
"Even though there are no signatures being checked nOpCount is incremented by the number of keys."],

["1",
"NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIGVERIFY 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIGVERIFY 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIGVERIFY 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIGVERIFY 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIGVERIFY 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIGVERIFY 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIGVERIFY 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIGVERIFY 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n' 'o' 'p' 'q' 'r' 's' 't' 20 CHECKMULTISIGVERIFY",
"STRICTENC"],

["0x40 0x42424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242",
"0x4d 0x4000 0x42424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242 EQUAL",
"STRICTENC",
"Basic PUSH signedness check"],

["0x4c 0x40 0x42424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242",
"0x4d 0x4000 0x42424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242 EQUAL",
"STRICTENC",
"Basic PUSHDATA1 signedness check"],

["all PUSHDATA forms are equivalent"],

["0x4c 0x4b 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111", "0x4b 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 EQUAL", "", "PUSHDATA1 of 75 bytes equals direct push of it"],
["0x4d 0xFF00 0xx4c 0xFF 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 EQUAL", "", "PUSHDATA2 of 255 bytes equals PUSHDATA1 of it"],

["0x00", "SIZE 0 EQUAL", "STRICTENC", "Basic OP_0 execution"],

["Numeric pushes"],

["0x01 0x81", "0x4f EQUAL", "", "OP1_NEGATE pushes 0x81"],
["0x01 0x01", "0x51 EQUAL", "", "OP_1  pushes 0x01"],
["0x01 0x02", "0x52 EQUAL", "", "OP_2  pushes 0x02"],
["0x01 0x03", "0x53 EQUAL", "", "OP_3  pushes 0x03"],
["0x01 0x04", "0x54 EQUAL", "", "OP_4  pushes 0x04"],
["0x01 0x05", "0x55 EQUAL", "", "OP_5  pushes 0x05"],
["0x01 0x06", "0x56 EQUAL", "", "OP_6  pushes 0x06"],
["0x01 0x07", "0x57 EQUAL", "", "OP_7  pushes 0x07"],
["0x01 0x08", "0x58 EQUAL", "", "OP_8  pushes 0x08"],
["0x01 0x09", "0x59 EQUAL", "", "OP_9  pushes 0x09"],
["0x01 0x0a", "0x5a EQUAL", "", "OP_10 pushes 0x0a"],
["0x01 0x0b", "0x5b EQUAL", "", "OP_11 pushes 0x0b"],
["0x01 0x0c", "0x5c EQUAL", "", "OP_12 pushes 0x0c"],
["0x01 0x0d", "0x5d EQUAL", "", "OP_13 pushes 0x0d"],
["0x01 0x0e", "0x5e EQUAL", "", "OP_14 pushes 0x0e"],
["0x01 0x0f", "0x5f EQUAL", "", "OP_15 pushes 0x0f"],
["0x01 0x10", "0x60 EQUAL", "", "OP_16 pushes 0x10"],

["Equivalency of different numeric encodings"],

["0x02 0x8000", "128 NUMEQUAL", "", "0x8000 equals 128"],
["0x01 0x00", "0 NUMEQUAL", "", "0x00 numequals 0"],
["0x01 0x80", "0 NUMEQUAL", "", "0x80 (negative zero) numequals 0"],
["0x02 0x0080", "0 NUMEQUAL", "", "0x0080 numequals 0"],
["0x02 0x0500", "5 NUMEQUAL", "", "0x0500 numequals 5"],
["0x03 0xff7f80", "0x02 0xffff NUMEQUAL", "", ""],
["0x03 0xff7f00", "0x02 0xff7f NUMEQUAL", "", ""],
["0x04 0xffff7f80", "0x03 0xffffff NUMEQUAL", "", ""],
["0x04 0xffff7f00", "0x03 0xffff7f NUMEQUAL", "", ""],

["1 0x02 0x0000", "PICK DROP", ""],
["1 0x02 0x0000", "ROLL DROP 1", ""],
["0x02 0x0000", "1ADD DROP 1", ""],
["0x02 0x0000", "1SUB DROP 1", ""],
["0x02 0x0000", "NEGATE DROP 1", ""],
["0x02 0x0000", "ABS DROP 1", ""],
["0x02 0x0000", "NOT DROP 1", ""],
["0x02 0x0000", "0NOTEQUAL DROP 1", ""],

["0 0x02 0x0000", "ADD DROP 1", ""],
["0x02 0x0000 0", "ADD DROP 1", ""],
["0 0x02 0x0000", "SUB DROP 1", ""],
["0x02 0x0000 0", "SUB DROP 1", ""],
["0 0x02 0x0000", "BOOLAND DROP 1", ""],
["0x02 0x0000 0", "BOOLAND DROP 1", ""],
["0 0x02 0x0000", "BOOLOR DROP 1", ""],
["0x02 0x0000 0", "BOOLOR DROP 1", ""],
["0 0x02 0x0000", "NUMEQUAL DROP 1", ""],
["0x02 0x0000 1", "NUMEQUAL DROP 1", ""],
["0 0x02 0x0000", "NUMEQUALVERIFY 1", ""],
["0x02 0x0000 0", "NUMEQUALVERIFY 1", ""],
["0 0x02 0x0000", "NUMNOTEQUAL DROP 1", ""],
["0x02 0x0000 0", "NUMNOTEQUAL DROP 1", ""],
["0 0x02 0x0000", "LESSTHAN DROP 1", ""],
["0x02 0x0000 0", "LESSTHAN DROP 1", ""],
["0 0x02 0x0000", "GREATERTHAN DROP 1", ""],
["0x02 0x0000 0", "GREATERTHAN DROP 1", ""],
["0 0x02 0x0000", "LESSTHANOREQUAL DROP 1", ""],
["0x02 0x0000 0", "LESSTHANOREQUAL DROP 1", ""],
["0 0x02 0x0000", "GREATERTHANOREQUAL DROP 1", ""],
["0x02 0x0000 0", "GREATERTHANOREQUAL DROP 1", ""],
["0 0x02 0x0000", "MIN DROP 1", ""],
["0x02 0x0000 0", "MIN DROP 1", ""],
["0 0x02 0x0000", "MAX DROP 1", ""],
["0x02 0x0000 0", "MAX DROP 1", ""],

["0x02 0x0000 0 0", "WITHIN DROP 1", ""],
["0 0x02 0x0000 0", "WITHIN DROP 1", ""],
["0 0 0x02 0x0000", "WITHIN DROP 1", ""],

["0 0 0x02 0x0000", "CHECKMULTISIG DROP 1", ""],
["0 0x02 0x0000 0", "CHECKMULTISIG DROP 1", ""],
["0 0x02 0x0000 0 1", "CHECKMULTISIG DROP 1", ""],
["0 0 0x02 0x0000", "CHECKMULTISIGVERIFY 1", ""],
["0 0x02 0x0000 0", "CHECKMULTISIGVERIFY 1", ""],

["WHILE loop conditionals"],

["1", "2 DROP WHILE 0 ENDWHILE", "STRICTENC", "succeeded WHILE test condition"],
["0", "2 DROP WHILE 0 ENDWHILE 1", "STRICTENC", "failed WHILE test condition"],
["1", "2 DROP WHILE IF 1 0 ELSE 1 ENDIF ENDWHILE", "STRICTENC", "IF... ELSE conditional within WHILE loop"],
["0 1", "2 DROP WHILE DROP 1ADD DUP 10 LESSTHAN ENDWHILE 10 NUMEQUAL", "STRICTENC", "count to 10 in WHILE loop"],
["0 1 2 3 4 5 6", "2 DROP WHILE DROP ENDWHILE 1", "STRICTENC", "tight WHILE... ENDWHILE loop"],
["0 1", "2 DROP WHILE DROP 1ADD TOALTSTACK 0 ENDWHILE FROMALTSTACK", "STRICTENC", "shared alt stack in WHILE loop"],
["1", "2 DROP WHILE WHILE 0 ENDWHILE 0 ENDWHILE", "STRICTENC", "nested while loops"],

["CATPUSHDATA"],

["0x00 0", "CATPUSHDATA 0x0000 EQUAL", "STRICTENC", ""],
["0x00 DATA_1 0xff", "CATPUSHDATA DATA_2 0x01ff EQUAL", "STRICTENC", ""],
["DATA_1 0x05 DATA_1 0x05", "CATPUSHDATA DATA_2 0x0555 EQUAL", "STRICTENC", ""],
["PUSHDATA1 0x01 0xff DATA_1 0xff", "CATPUSHDATA DATA_3 0xff01ff EQUAL", "STRICTENC", ""],
["0x00 PUSHDATA1 0x03 0xcccccc", "CATPUSHDATA PUSHDATA1 0x04 0x03cccccc EQUAL", "STRICTENC", ""],
["DATA_1 0x05 DATA_1 0x05 SWAP DATA_4 0xdeadbeef", "CATPUSHDATA DROP DATA_1 0x05 EQUAL", "STRICTENC", "CATPUSHDATA no mutation"],

["VERSION"],

["BITWISE operators"],
["DATA_1 0x7f DATA_1 0xf0", "AND DATA_1 0x70 EQUAL", "STRICTENC", ""],
["DATA_2 0x7fde DATA_1 0xf0", "AND DATA_1 0x70 EQUAL", "STRICTENC", "AND truncates"],
["DATA_1 0x7f DATA_1 0xf0", "OR DATA_1 0xff EQUAL", "STRICTENC", ""],
["DATA_2 0x7fde DATA_1 0xf0", "OR DATA_2 0xffde EQUAL", "STRICTENC", "OR pads"],
["DATA_1 0x7f DATA_1 0xf0", "XOR DATA_1 0x8f EQUAL", "STRICTENC", ""],
["DATA_2 0x7fde DATA_1 0xf0", "XOR DATA_2 0x8fde EQUAL", "STRICTENC", "XOR pads"],
["DATA_1 0x7f", "INVERT DATA_1 0x80 EQUAL", "STRICTENC", ""],

["The End"]
]
