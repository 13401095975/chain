[
["Format is: [contractScript, sigScript, pubkeyScript, testName]"],
["SigScript and pubkeyScript are parameters only."],
["ContractScript is serialized and added to sigScript,"],
["and also hashed and added to pubkeyScript"],
["(which also gets the p2c boilerplate)."],

["TODO(bobg): test OP_CIRCULATION"],

["ADD 5 EQUAL", "3 2", "", "Zero params"],
["ADD 5 EQUAL", "3", "2", "One param"],
["ADD 5 EQUAL", "", "3 2", "Two params"],

["The serialized script used by EVAL here is <2 3 ADD>"],
["DATA_3 0x525393 EVAL 4 ADD 9 EQUAL", "", "", "Simple EVAL test"],

["OUTPUTSCRIPT EQUAL", "DATA_39 0x517576aa20c5fd8a0d0c9adf6b92ce40f278d0a4d5814faa43486f0fdc44eec6eca493c77288c0", ""],

["There is a total of 7 units of this asset in the sample tx"],
["used for testing.  This script is executed twice, once each"],
["for two of the tx's inputs.  Requiring 3 units of the asset"],
["twice should not deplete it."],
["1 DROP 3 DATA_32 0x0102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20 OUTPUTSCRIPT REQUIREOUTPUT", "", "", "Simple REQUIREOUTPUT test"],

["Opcodes enabled only in the P2C context."],
["CAT DATA_5 0x0102030405 EQUAL", "DATA_3 0x010203 DATA_2 0x0405", "", "CAT"],
["SUBSTR 'oba' EQUAL", "'foobar' 2 3", "", "SUBSTR"],
["LEFT 'foo' EQUAL", "'foobar' 3", "", "LEFT"],
["RIGHT 'bar' EQUAL", "'foobar' 3", "", "RIGHT"],
["2MUL 14 EQUAL", "7", "", "2MUL"],
["2MUL -14 EQUAL", "-7", "", "2MUL"],
["2DIV 7 EQUAL", "14", "", "2DIV"],
["2DIV -7 EQUAL", "-14", "", "2DIV"],
["MUL 407 EQUAL", "11 37", "", "MUL"],
["MUL -407 EQUAL", "-11 37", "", "MUL"],
["MUL -407 EQUAL", "11 -37", "", "MUL"],
["MUL 407 EQUAL", "-11 -37", "", "MUL"],
["DIV 37 EQUAL", "407 11", "", "DIV"],
["DIV -37 EQUAL", "407 -11", "", "DIV"],
["DIV -37 EQUAL", "-407 11", "", "DIV"],
["DIV 37 EQUAL", "-407 -11", "", "DIV"],
["MOD 1 EQUAL", "17 4", "", "MOD"],
["LSHIFT 28 EQUAL", "7 2", "", "LSHIFT"],
["LSHIFT -28 EQUAL", "-7 2", "", "LSHIFT"],
["RSHIFT 7 EQUAL", "28 2", "", "RSHIFT"],
["RSHIFT -7 EQUAL", "-28 2", "", "RSHIFT"],

["2DIV 3 EQUAL", "7", "", "Test positive 2DIV truncation"],
["2DIV -3 EQUAL", "-7", "", "Test negative 2DIV truncation"],
["DIV 2 EQUAL", "7 3", "", "Test positive integer-division truncation (1)"],
["DIV 2 EQUAL", "8 3", "", "Test positive integer-division truncation (2)"],
["DIV -2 EQUAL", "-7 3", "", "Test negative integer-division truncation (1)"],
["DIV -2 EQUAL", "-8 3", "", "Test negative integer-division truncation (2)"],
["DIV -2 EQUAL", "7 -3", "", "Test negative integer-division truncation (3)"],
["DIV -2 EQUAL", "8 -3", "", "Test negative integer-division truncation (4)"]
]
