box: chaindev/wercker:20160921.1
# To update the docker image for this "box",
# see $CHAIN/docker/wercker.

services:
  - id: clkao/postgres-plv8
    env:
      POSTGRES_PASSWORD: p
      POSTGRES_USER: u
      POSTGRES_DB: api-test

build:
  steps:
    - script:
        name: fmt vet test imports
        code: |
          set -veo pipefail
          go version
          go env
          export CHAIN=$GOPATH/src/chain
          PATH=$GOPATH/bin:$PATH
          cp -a $WERCKER_SOURCE_DIR $GOPATH/src/chain
          export WERCKER_SOURCE_DIR=$GOPATH/src/chain
          export DB_URL_TEST="postgres://u:p@$POSTGRES_PLV8_PORT_5432_TCP_ADDR:$POSTGRES_PLV8_PORT_5432_TCP_PORT/api-test?sslmode=disable"
          cd $GOPATH/src/chain
          test -z "$(go fmt $(go list ./...|grep -v vendor))"
          go vet $(go list ./...|grep -v vendor)
          go install chain/cmd/vet
          vet .
          go install chain/log # needed before testing ./cmd/vet below
          go test -cover $(go list ./...|grep -v vendor|egrep -v 'xprvseetool|thales|signerd')
          test -z "$(goimports -l .|grep -v vendor)"
          (cd migrations; ./check-names.bash)
          go generate $(go list ./...|grep -v vendor)
          git diff --exit-code # make sure generated files are in sync
    - script:
        name: thales hsm unit tests
        code: |
          export CHAIN=$GOPATH/src/chain
          PATH=$CHAIN/bin:$PATH
          make -C $CHAIN/crypto/hsm/thales/xprvseemodule test
    - script:
        name: cfmt
        code: |
          bin/cfmt
          git diff --exit-code
    - script:
        name: check for tk and xxx
        code: |
          p='(xxx|(tk)+)' # can't write inline or it'll match this file
          if egrep -Iinr '//.*\b'$p'\b' $(ls -1|egrep -v 'vendor|generated')
          then exit 1
          fi
